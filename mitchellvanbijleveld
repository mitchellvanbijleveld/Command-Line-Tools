#!/bin/bash
#
####################################################################################################
####################################################################################################
# INFO - MITCHELLVANBIJLEVELD
####################################################################################################
VAR_UTILITY="mitchell"
VAR_UTILITY_SCRIPT="vanbijleveld"
VAR_UTILITY_SCRIPT_VERSION="2024.12.09-2249"
VAR_UTILITY_SCRIPT_REQUIRED_COMMAND_LINE_TOOLS="awk basename bash date dirname echo find printf realpath sed tr"
####################################################################################################
# INFO - MITCHELLVANBIJLEVELD
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# FUNCTIONS
####################################################################################################
PrintMessage(){
    # $1 = LOG LEVEL
    # $2 = UTILITY
    # $3 = SCRIPT
    # $4 = MESSAGE
    if [[ $1 == "" ]] && [[ $2 == "" ]] && [[ $3 == "" ]] && [[ $4 == "" ]]; then
        case $GLOBAL_VAR_DEBUG in
            1) return 0;; 
            *) echo; return 0;;
        esac
    elif [[ $1 != "" ]] && [[ $2 != "" ]] && [[ $3 != "" ]] && [[ $4 != "" ]]; then
        case $GLOBAL_VAR_DEBUG in
            1) echo $(date +'%Y-%m-%d %H:%M:%S') "$(printf '%-32s' "$2/$3")" "[ $(printf '%-8s' "$1") ]" "$4"; return 0;;
            *) 
                case $1 in
                    "INFO" | "FATAL") echo "$4"; return 0;;
                    *) return 0;;
                esac
                ;;
        esac
    fi
}
#
eval_FromFile(){
    # $1 = NAME OF VARIABLE
    # $2 = FILE PATH
    eval $(grep "^$1=" $2)
}
#
die_UtilityNotFound () {
    # $1 = MESSAGE
    PrintMessage "FATAL" "mitchell" "vanbijleveld" "$1"
    PrintMessage
    PrintMessage "INFO" "mitchell" "vanbijleveld" "The bin '$(basename $0)' supports the following utilities:"
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Searching for utilities in '$GLOBAL_VAR_DIR_INSTALLATION'..."
    for var_utility_dir in "$GLOBAL_VAR_DIR_INSTALLATION"/*; do
        if [[ -d  $var_utility_dir ]]; then
            var_utility=$(basename $var_utility_dir)
            PrintMessage "INFO" "mitchell" "vanbijleveld" "  - $var_utility"
        fi
    done
    PrintMessage
    exit 1
}
#
die_UtilityScriptNotFound (){
    # $1 = MESSAGE
    var_utility_scripts_found=0
    PrintMessage "FATAL" "mitchell" "vanbijleveld" "$1"
    PrintMessage
    PrintMessage "INFO" "mitchell" "vanbijleveld" "The utility '$VAR_UTILITY' supports the following scripts:"
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Searching for utility scripts in '$VAR_UTILITY_FOLDER_PATH'..."
    for var_utility_script_file in "$VAR_UTILITY_FOLDER_PATH"/*; do
        if [[ -f $var_utility_script_file ]] && [[ $var_utility_script_file == *".bash" ]]; then
            var_utility_script=$(basename $var_utility_script_file)
            PrintMessage "INFO" "mitchell" "vanbijleveld" "  - ${var_utility_script%.bash}"
            ((var_utility_scripts_found++))
        fi
    done
    if [[ $var_utility_scripts_found -eq 0 ]]; then
        PrintMessage "INFO" "mitchell" "vanbijleveld" "  No Utility Scripts available."
    fi
    PrintMessage
    exit 1
}
#
FindUtilityFolderPath(){
    # $1 = FIND FOLDER PATH
    # $2 = FIND FOLDER NAME
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Finding Utility Folder for '$2'..."
    VAR_UTILITY_FOLDER_PATH=$(find $1 -maxdepth 1 -iname $2 -type d)
    if [[ -d $VAR_UTILITY_FOLDER_PATH ]]; then
        return 0
    else
        PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Folder for '$2' not found!"
        return 1
    fi
}
#
FindUtilityScriptFilePath(){
    # $1 = FIND FOLDER PATH
    # $2 = FIND FILE NAME
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Finding Utility Script File for '$2'..."
    VAR_UTILITY_SCRIPT_FILE_PATH=$(find $1 -maxdepth 1 -iname $2.bash -type f)
    if [[ -f $VAR_UTILITY_SCRIPT_FILE_PATH ]]; then
        return 0
    else
        PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Script File for '$2' not found!"
        return 1
    fi
}
####################################################################################################
# FUNCTIONS
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# VARIABLES
####################################################################################################
GLOBAL_VAR_DEBUG=0
VAR_FLAGS="--DEBUG"
#
GLOBAL_VAR_DIR_INSTALLATION=$(dirname $(realpath $0))
GLOBAL_VAR_DIR_ETC="/etc/mitchellvanbijleveld/Command-Line-Tools"
GLOBAL_VAR_DIR_TMP="/tmp/mitchellvanbijleveld/Command-Line-Tools"
#
VAR_ARGUMENTS=$(echo $@ | tr '[:lower:]' '[:upper:]')
VAR_ARGUMENTS_WITHOUT_FLAGS=$(echo $VAR_ARGUMENTS | sed -E 's/[^A-Z0-9 ][-]+[^ ]+[ ]*//g')
#
VAR_UTILITY=$(echo $VAR_ARGUMENTS_WITHOUT_FLAGS | awk '{print $1}')
VAR_UTILITY_SCRIPT=$(echo $VAR_ARGUMENTS_WITHOUT_FLAGS | awk '{print $2}')
#
VAR_UTILITY_SCRIPT_ARGUMENTS_ARRAY=()
for var_argument in "$@"; do
    var_argument_CAPS=$(echo $var_argument | tr '[:lower:]' '[:upper:]')
    if [[ $VAR_FLAGS != *"$var_argument_CAPS"* ]] &&
       [[ $var_argument_CAPS != "$VAR_UTILITY" ]] &&
       [[ $var_argument_CAPS != "$VAR_UTILITY" ]]; then
        VAR_UTILITY_SCRIPT_ARGUMENTS_ARRAY+=("$var_argument")
        VAR_UTILITY_SCRIPT_ARGUMENTS_STRING="$(echo $VAR_UTILITY_SCRIPT_ARGUMENTS_STRING) '$var_argument'"
    fi
    #
    case $var_argument_CAPS in
        "--DEBUG") GLOBAL_VAR_DEBUG=1;;
    esac
    #
done
####################################################################################################
# VARIABLES
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# PRINT CONFIG PART ONE
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Printing configuration..."
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "GLOBAL_VAR_DIR_INSTALLATION         = $GLOBAL_VAR_DIR_INSTALLATION"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "GLOBAL_VAR_DIR_ETC                  = $GLOBAL_VAR_DIR_ETC"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "GLOBAL_VAR_DIR_TMP                  = $GLOBAL_VAR_DIR_TMP"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_ARGUMENTS                       = $VAR_ARGUMENTS"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_ARGUMENTS_WITHOUT_FLAGS         = $VAR_ARGUMENTS_WITHOUT_FLAGS"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_UTILITY                         = $VAR_UTILITY"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_UTILITY_SCRIPT                  = $VAR_UTILITY_SCRIPT"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_UTILITY_SCRIPT_ARGUMENTS_STRING = $VAR_UTILITY_SCRIPT_ARGUMENTS_STRING"
####################################################################################################
# PRINT CONFIG PART ONE
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# FIND UTILITY FOLDER PATH
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Checking variable 'VAR_UTILITY' with value '$VAR_UTILITY'..."
if [[ $VAR_UTILITY == "" ]]; then
    die_UtilityNotFound "No Utility specified!"
fi
#
if FindUtilityFolderPath "$GLOBAL_VAR_DIR_INSTALLATION" "$VAR_UTILITY"; then
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Folder '$VAR_UTILITY' found!"
elif FindUtilityScriptFilePath "$GLOBAL_VAR_DIR_INSTALLATION/bin" "$VAR_UTILITY"; then
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Folder '$VAR_UTILITY' was not found..."
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Script '$VAR_UTILITY' found in Utility 'bin'!"
    VAR_UTILITY_SCRIPT=$VAR_UTILITY; VAR_UTILITY="BIN"
else
    die_UtilityNotFound "Utility '$VAR_UTILITY' not found!"  
fi
####################################################################################################
# FIND UTILITY FOLDER PATH
####################################################################################################
####################################################################################################
#
####################################################################################################
####################################################################################################
# FIND UTILITY SCRIPT FILE PATH
####################################################################################################
if [[ ! $VAR_UTILITY_SCRIPT_FILE_PATH == "" ]]; then
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Script File Path is already set! No need to search for it..."
elif FindUtilityScriptFilePath "$VAR_UTILITY_FOLDER_PATH" "$VAR_UTILITY_SCRIPT"; then
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Script File '$VAR_UTILITY_SCRIPT' found in Utility '$VAR_UTILITY'!"
elif FindUtilityScriptFilePath "$VAR_UTILITY_FOLDER_PATH" "$VAR_UTILITY"; then
    PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Utility Script '$VAR_UTILITY' found in Utility '$VAR_UTILITY'!"
    VAR_UTILITY_SCRIPT=$VAR_UTILITY
elif [[ $VAR_UTILITY_SCRIPT == "" ]]; then
    die_UtilityScriptNotFound "No Utility Script specified!"
else
    die_UtilityScriptNotFound "Utility Script '$VAR_UTILITY_SCRIPT' not found within Utility '$VAR_UTILITY'!"  
fi
####################################################################################################
# FIND UTILITY SCRIPT FILE PATH
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# EXPORT FUNCTIONS
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Exporting Functions..."
export -f PrintMessage
export -f eval_FromFile
####################################################################################################
# EXPORT FUNCTIONS
####################################################################################################
####################################################################################################
#
####################################################################################################
####################################################################################################
# EXPORT GLOBAL VARIABLES
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Exporting Global Variables..."
export GLOBAL_VAR_DEBUG=$GLOBAL_VAR_DEBUG
export GLOBAL_VAR_DIR_INSTALLATION=$GLOBAL_VAR_DIR_INSTALLATION
export GLOBAL_VAR_DIR_ETC=$GLOBAL_VAR_DIR_ETC
export GLOBAL_VAR_DIR_TMP=$GLOBAL_VAR_DIR_TMP
####################################################################################################
# EXPORT GLOBAL VARIABLES
####################################################################################################
####################################################################################################
#
####################################################################################################
####################################################################################################
# EXPORT UTILITY SCRIPT VARIABLES
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Exporting Utility Script Variables..."
export UTILITY_SCRIPT_VAR_DIR_ETC=$(echo $VAR_UTILITY_SCRIPT_FILE_PATH | sed "s|$GLOBAL_VAR_DIR_INSTALLATION|$GLOBAL_VAR_DIR_ETC|; s|.bash$||")
export UTILITY_SCRIPT_VAR_DIR_TMP=$(echo $VAR_UTILITY_SCRIPT_FILE_PATH | sed "s|$GLOBAL_VAR_DIR_INSTALLATION|$GLOBAL_VAR_DIR_TMP|; s|.bash$||")
####################################################################################################
# EXPORT UTILITY SCRIPT VARIABLES
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# PRINT CONFIG PART TWO
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Printing configuration..."
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_UTILITY_FOLDER_PATH             = $VAR_UTILITY_FOLDER_PATH"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "VAR_UTILITY_SCRIPT_FILE_PATH        = $VAR_UTILITY_SCRIPT_FILE_PATH"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "UTILITY_SCRIPT_VAR_DIR_ETC          = $UTILITY_SCRIPT_VAR_DIR_ETC"
PrintMessage "CONFIG" "mitchell" "vanbijleveld" "UTILITY_SCRIPT_VAR_DIR_TMP          = $UTILITY_SCRIPT_VAR_DIR_TMP"
####################################################################################################
# PRINT CONFIG PART TWO
####################################################################################################
####################################################################################################
#
#
#
#
#
####################################################################################################
####################################################################################################
# CHECK DEPENDENCIES
####################################################################################################
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Fetching dependencies from utility script..."
eval_FromFile "VAR_UTILITY_SCRIPT_REQUIRED_COMMAND_LINE_TOOLS" $VAR_UTILITY_SCRIPT_FILE_PATH
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Starting script to check dependencies..."
$(which bash) "$GLOBAL_VAR_DIR_INSTALLATION/bin/CheckDependencies.bash" $VAR_UTILITY_SCRIPT_REQUIRED_COMMAND_LINE_TOOLS
#
if [[ $? -eq 1 ]]; then
    PrintMessage "FATAL" "mitchell" "vanbijleveld" "Could not start Utility '$VAR_UTILITY' Script '$VAR_UTILITY_SCRIPT' because dependencies are missing. Exiting..."
    exit 1
fi
####################################################################################################
# CHECK DEPENDENCIES
####################################################################################################
####################################################################################################
#
#
#
#
#
PrintMessage "DEBUG" "mitchell" "vanbijleveld" "Starting Utility '$VAR_UTILITY' Script '$VAR_UTILITY_SCRIPT' from '$VAR_UTILITY_SCRIPT_FILE_PATH' with arguments: $VAR_UTILITY_SCRIPT_ARGUMENTS_STRING"
$(which bash) $VAR_UTILITY_SCRIPT_FILE_PATH "${VAR_UTILITY_SCRIPT_ARGUMENTS_ARRAY[@]}"